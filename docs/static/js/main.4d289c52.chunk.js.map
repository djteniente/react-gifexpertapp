{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","gifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","idx","ReactDOM","render","document","getElementById"],"mappings":"2MAkCeA,EA/BY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,IACFF,GAAc,SAAAO,GAAU,OAAML,GAAN,mBAAqBK,OAC7CJ,EAAc,MAKhB,SACE,uBACEK,KAAK,OACLC,MAAQP,EACRQ,SAjBoB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,0FAE2EC,UAAUH,GAFrF,sBAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,kCAAMA,EAAN,WCFOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBZ,mBAAS,CACjCmB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAkB1C,OAXAC,qBAAU,WACRxB,EAASC,GACRwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIZ,CAACpB,IAEGqB,EDf0BK,CAAc1B,GAAlCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,sDAAd,SAAsEhB,IAEpEoB,GAAW,mBAAGJ,UAAU,sDAAb,yBAEb,qBAAKA,UAAU,YAAf,SAGMH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAESA,GADCA,EAAIC,aEKXgB,EApBM,WAAK,MAGYvC,mBAAS,CAAC,aAHtB,mBAGjBM,EAHiB,KAGLP,EAHK,KAKxB,OAAO,gCACH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEIO,EAAWe,KAAI,SAACT,EAAU4B,GAAX,OACb,cAAC,EAAD,CAAwB5B,SAAYA,GAAtBA,YCZ1B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4d289c52.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport propTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if( inputValue){\n      setCategories(categories => [ inputValue, ...categories ]);\n      setInputValue('');\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes={\n  setCategories: propTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async( category ) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=iBZYqNBhzsX13FudNz7QBL9Dof4bVa1y&q=${ encodeURI(category) }&limit=10`\n  const resp = await fetch(url);\n  const {data} = await resp.json();\n\n  const gifs = data.map( img => {\n    return{ \n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n  return (\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\n      <img src={ url } alt={title} />\n      <p> { title } </p>\n    </div>\n  )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport {GifGridItem} from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-2s\">{ category }</h3>\n\n      { loading && <p className=\"animate__animated animate__fadeIn animate__delay-2s\">Cargando...</p> }\n\n      <div className=\"card-grid\">\n        \n          {\n            images.map(img => (\n            <GifGridItem \n                key={ img.id }\n                { ...img }  \n              />\n            ))\n          }\n      </div>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs( category )\n    .then( imgs => {\n      setState({\n        data: imgs,\n        loading: false\n      });\n    })\n    ;\n  }, [category])\n\n  return state\n}","import React, { useState } from 'react';\nimport AppCategory from './components/AddCategory'\nimport {GifGrid} from './components/GifGrid'\n//iBZYqNBhzsX13FudNz7QBL9Dof4bVa1y\nconst GifExpertApp = () =>{\n\n  //useState[categories] = ['One Puch', 'Samurai X', 'Dragon Ball']\n  const [categories, setCategories] = useState(['One Puch']);\n  \n  return <div>\n      <h2>GifExpertApp</h2>\n      <AppCategory setCategories={setCategories}/>\n      <hr /> \n\n      <ol>\n        { \n          categories.map((category, idx) => (\n            <GifGrid key={category} category = {category} />\n          )) \n        }\n      </ol>\n    </div>\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './gifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}